// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package deps

import (
	"context"
	"github.com/google/wire"
	"github.com/jackc/pgx/v5"
	"goodmeh/app/controller"
	"goodmeh/app/repository"
	"goodmeh/app/service"
	"goodmeh/app/socket"
)

// Injectors from injector.go:

func Initialize(db *pgx.Conn, ctx context.Context, socketServer *socket.Server) *Initialization {
	healthController := controller.NewHealthController()
	queries := ProvideQueries(db)
	placeService := service.NewPlaceService(ctx, queries)
	reviewService := service.NewReviewService(ctx, queries)
	placesController := controller.NewPlacesController(placeService, reviewService)
	initialization := NewInitialization(healthController, placesController)
	return initialization
}

// injector.go:

func ProvideQueries(db *pgx.Conn) *repository.Queries {
	return repository.New(db)
}

var repositorySet = wire.NewSet(
	ProvideQueries,
)

var placeServiceSet = wire.NewSet(service.NewPlaceService, wire.Bind(new(service.IPlaceService), new(*service.PlaceService)))

var reviewServiceSet = wire.NewSet(service.NewReviewService, wire.Bind(new(service.IReviewService), new(*service.ReviewService)))

var healthControllerSet = wire.NewSet(controller.NewHealthController, wire.Bind(new(controller.IHealthController), new(*controller.HealthController)))

var placesControllerSet = wire.NewSet(controller.NewPlacesController, wire.Bind(new(controller.IPlacesController), new(*controller.PlacesController)))
